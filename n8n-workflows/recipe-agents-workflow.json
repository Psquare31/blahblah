{
  "name": "Agentic Recipe Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "recipe-agents",
        "options": {}
      },
      "id": "8a6d4c5e-7f3b-4d2a-9c1e-5f8b7e9d3c2a",
      "name": "Webhook Input",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [260, 300],
      "webhookId": "recipe-agents"
    },
    {
      "parameters": {
        "functionCode": "// Extract user input from webhook\nconst userInput = items[0].json.userInput;\n\n// Prepare data for agents\nreturn [\n  {\n    json: {\n      requestId: items[0].json.requestId,\n      timestamp: items[0].json.timestamp,\n      ingredients: userInput.ingredients,\n      allergies: userInput.allergies || null,\n      budget: userInput.budget || null,\n      leftovers: userInput.leftovers || null,\n      preferences: userInput.preferences || null\n    }\n  }\n];"
      },
      "id": "1b2c3d4e-5f6a-7b8c-9d0e-1f2a3b4c5d6e",
      "name": "Process Input",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "url": "http://recipe-app:3000/api/agents/meal-planner",
        "authentication": "none",
        "requestMethod": "POST",
        "jsonParameters": true,
        "options": {
          "timeout": 30000
        }
      },
      "id": "2c3d4e5f-6a7b-8c9d-0e1f-2a3b4c5d6e7f",
      "name": "Meal Planner Agent",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [160, 120]
    },
    {
      "parameters": {
        "url": "http://recipe-app:3000/api/agents/allergy-checker",
        "authentication": "none",
        "requestMethod": "POST",
        "jsonParameters": true,
        "options": {
          "timeout": 30000
        }
      },
      "id": "3d4e5f6a-7b8c-9d0e-1f2a-3b4c5d6e7f8a",
      "name": "Allergy Checker Agent",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [260, 120]
    },
    {
      "parameters": {
        "url": "http://recipe-app:3000/api/agents/budget-optimizer",
        "authentication": "none",
        "requestMethod": "POST",
        "jsonParameters": true,
        "options": {
          "timeout": 30000
        }
      },
      "id": "4e5f6a7b-8c9d-0e1f-2a3b-4c5d6e7f8a9b",
      "name": "Budget Optimizer Agent",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [360, 120]
    },
    {
      "parameters": {
        "url": "http://recipe-app:3000/api/agents/leftover-optimizer",
        "authentication": "none",
        "requestMethod": "POST",
        "jsonParameters": true,
        "options": {
          "timeout": 30000
        }
      },
      "id": "5f6a7b8c-9d0e-1f2a-3b4c-5d6e7f8a9b0c",
      "name": "Leftover Optimizer Agent",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [460, 120]
    },
    {
      "parameters": {
        "url": "http://recipe-app:3000/api/agents/grocery-suggester",
        "authentication": "none",
        "requestMethod": "POST",
        "jsonParameters": true,
        "options": {
          "timeout": 30000
        }
      },
      "id": "6a7b8c9d-0e1f-2a3b-4c5d-6e7f8a9b0c1d",
      "name": "Grocery Suggester Agent",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [560, 120]
    },
    {
      "parameters": {
        "functionCode": "// Combine all agent results\nconst results = {\n  requestId: items[0].json.requestId,\n  timestamp: new Date().toISOString(),\n  mealPlan: null,\n  allergyWarnings: null,\n  budgetOptimization: null,\n  leftoverSuggestions: null,\n  groceryList: null,\n  errors: []\n};\n\n// Process each agent result\nfor (const item of items) {\n  if (item.json.agent === 'meal-planner' && item.json.success) {\n    results.mealPlan = item.json.result;\n  } else if (item.json.agent === 'allergy-checker' && item.json.success) {\n    results.allergyWarnings = item.json.result;\n  } else if (item.json.agent === 'budget-optimizer' && item.json.success) {\n    results.budgetOptimization = item.json.result;\n  } else if (item.json.agent === 'leftover-optimizer' && item.json.success) {\n    results.leftoverSuggestions = item.json.result;\n  } else if (item.json.agent === 'grocery-suggester' && item.json.success) {\n    results.groceryList = item.json.result;\n  } else if (!item.json.success) {\n    results.errors.push(`${item.json.agent}: ${item.json.message || 'Unknown error'}`);\n  }\n}\n\nreturn [{ json: results }];"
      },
      "id": "7b8c9d0e-1f2a-3b4c-5d6e-7f8a9b0c1d2e",
      "name": "Combine Results",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [660, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{$json}}"
      },
      "id": "8c9d0e1f-2a3b-4c5d-6e7f-8a9b0c1d2e3f",
      "name": "Return Response",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [860, 300]
    }
  ],
  "connections": {
    "Webhook Input": {
      "main": [
        [
          {
            "node": "Process Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Input": {
      "main": [
        [
          {
            "node": "Meal Planner Agent",
            "type": "main",
            "index": 0
          },
          {
            "node": "Allergy Checker Agent",
            "type": "main",
            "index": 0
          },
          {
            "node": "Budget Optimizer Agent",
            "type": "main",
            "index": 0
          },
          {
            "node": "Leftover Optimizer Agent",
            "type": "main",
            "index": 0
          },
          {
            "node": "Grocery Suggester Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Meal Planner Agent": {
      "main": [
        [
          {
            "node": "Combine Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Allergy Checker Agent": {
      "main": [
        [
          {
            "node": "Combine Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Budget Optimizer Agent": {
      "main": [
        [
          {
            "node": "Combine Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Leftover Optimizer Agent": {
      "main": [
        [
          {
            "node": "Combine Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Grocery Suggester Agent": {
      "main": [
        [
          {
            "node": "Combine Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine Results": {
      "main": [
        [
          {
            "node": "Return Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "versionId": "1"
}